rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // ========================================
    // REGLAS PARA USUARIOS
    // ========================================
    match /users/{userId} {
      // Solo el usuario puede leer/escribir su propio perfil
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Cualquier usuario autenticado puede leer usuarios con role: 'psychologist'
      allow read: if request.auth != null && 
        resource.data.role == 'psychologist';
      
      // Los psicólogos pueden leer datos de usuarios para citas y reportes
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/psychologists/$(request.auth.uid));
    }
    
    // ========================================
    // REGLAS PARA PERFILES DE PSICÓLOGOS
    // ========================================
    match /psychologists/{psychologistId} {
      // Cualquier usuario autenticado puede leer psicólogos disponibles
      allow read: if request.auth != null;
      
      // Solo el psicólogo puede escribir su propio perfil
      allow write: if request.auth != null && request.auth.uid == psychologistId;
      
      // Permitir creación de psicólogos por defecto (con userId específico)
      allow create: if request.auth != null && 
        (request.resource.data.userId.matches('default-psychologist-.*') ||
         request.auth.uid == request.resource.data.userId);
      
      // Permitir eliminación de psicólogos corruptos o por defecto
      allow delete: if request.auth != null && 
        (resource.data.userId.matches('default-psychologist-.*') ||
         request.auth.uid == psychologistId);
      
      // Los pacientes pueden leer datos básicos de su psicólogo asignado
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/patients/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/patients/$(request.auth.uid)).data.psychologistId == psychologistId;
    }
    
    // ========================================
    // REGLAS PARA MOOD LOGS - SIMPLIFICADAS
    // ========================================
    match /moodLogs/{moodLogId} {
      // Permitir leer/escribir si el usuario está autenticado
      allow read, write: if request.auth != null;
      
      // Permitir crear mood logs si el usuario está autenticado
      allow create: if request.auth != null;
    }
    
    // ========================================
    // REGLAS PARA PACIENTES
    // ========================================
    match /patients/{patientId} {
      // Solo el psicólogo asignado puede gestionar el paciente
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.psychologistId;
      
      // El paciente puede leer su propia información básica
      allow read: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      
      // Validaciones para creación
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.psychologistId &&
        isValidPatient(request.resource.data);
    }
    
    // ========================================
    // REGLAS PARA CITAS
    // ========================================
    match /appointments/{appointmentId} {
      // El usuario puede leer/escribir sus propias citas
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      
      // Los psicólogos pueden leer/escribir citas donde son asignados
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.psychologistId;
      
      // Los psicólogos pueden crear citas para cualquier usuario
      allow create: if request.auth != null && 
        exists(/databases/$(database)/documents/psychologists/$(request.auth.uid)) &&
        isValidAppointment(request.resource.data);
      
      // Los usuarios pueden crear citas para sí mismos
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId &&
        isValidAppointment(request.resource.data);
    }
    
    // ========================================
    // REGLAS PARA CHATS
    // ========================================
    match /chats/{chatId} {
      // El usuario puede leer/escribir chats donde participa
      allow read, write: if request.auth != null && 
        request.auth.uid in resource.data.participants;
      
      // Permitir crear nuevos chats donde el usuario participa
      allow create: if request.auth != null && 
        request.auth.uid in request.resource.data.participants;
      
      // Permitir actualizar chats existentes
      allow update: if request.auth != null && 
        request.auth.uid in resource.data.participants;
    }
    
    // ========================================
    // REGLAS PARA MENSAJES
    // ========================================
    match /messages/{messageId} {
      // El usuario puede leer/escribir mensajes donde participa
      allow read, write: if request.auth != null && 
        (request.auth.uid == resource.data.senderId || 
         request.auth.uid == resource.data.receiverId);
      
      // Permitir crear nuevos mensajes
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.senderId &&
        isValidMessage(request.resource.data);
      
      // Permitir respuestas de IA
      allow create: if request.auth != null && 
        request.resource.data.senderId == 'ai-assistant';
      
      // Los participantes de la sesión pueden leer/escribir mensajes
      allow read, write: if request.auth != null && 
        request.auth.uid in get(/databases/$(database)/documents/chatSessions/$(resource.data.sessionId)).data.participants;
    }
    
    // ========================================
    // REGLAS PARA NOTIFICACIONES (ACTUALIZADA)
    // ========================================
    match /notifications/{notificationId} {
      // El usuario destinatario puede leer/escribir sus notificaciones
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      
      // Los psicólogos pueden leer/escribir notificaciones donde son mencionados
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.psychologistId;
      
      // Permitir crear notificaciones
      allow create: if request.auth != null && 
        (request.auth.uid == request.resource.data.userId ||
         request.auth.uid == request.resource.data.psychologistId);
      
      // Permitir actualizar solo el estado de lectura
      allow update: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         request.auth.uid == resource.data.psychologistId) &&
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['isRead', 'readAt']);
    }
    
    // ========================================
    // REGLAS PARA SESIONES DE CHAT (ACTUALIZADA)
    // ========================================
    match /chatSessions/{sessionId} {
      // El usuario puede leer/escribir sus propias sesiones de chat
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      
      // Los psicólogos pueden leer/escribir sesiones donde participan
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.psychologistId;
      
      // Permitir acceso si el usuario está en el array de participantes
      allow read, write: if request.auth != null && 
        request.auth.uid in resource.data.participants;
      
      // Permitir crear nuevas sesiones
      allow create: if request.auth != null && 
        (request.auth.uid == request.resource.data.userId ||
         request.auth.uid == request.resource.data.psychologistId ||
         request.auth.uid in request.resource.data.participants);
    }
    
    // ========================================
    // REGLAS PARA MENSAJES DE CHAT (SUBCONJUNTO)
    // ========================================
    match /chatSessions/{sessionId}/messages/{messageId} {
      // Los participantes de la sesión pueden leer/escribir mensajes
      allow read, write: if request.auth != null && 
        request.auth.uid in get(/databases/$(database)/documents/chatSessions/$(sessionId)).data.participants;
      
      // Permitir crear nuevos mensajes
      allow create: if request.auth != null && 
        request.auth.uid in get(/databases/$(database)/documents/chatSessions/$(sessionId)).data.participants &&
        request.auth.uid == request.resource.data.senderId;
    }
    
    // ========================================
    // REGLAS PARA MENSAJES DE CHAT (COLECCIÓN PRINCIPAL) - SIMPLIFICADAS
    // ========================================
    match /chatMessages/{messageId} {
      // Permitir leer/escribir si el usuario está autenticado
      allow read, write: if request.auth != null;
      
      // Permitir crear nuevos mensajes si el usuario está autenticado
      allow create: if request.auth != null;
    }
    
    // ========================================
    // REGLAS PARA ANÁLISIS DE IA
    // ========================================
    match /aiAnalysis/{analysisId} {
      // El usuario puede leer/escribir sus propios análisis
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      
      // Los psicólogos pueden leer análisis de sus pacientes
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/patients/$(resource.data.userId)) &&
        get(/databases/$(database)/documents/patients/$(resource.data.userId)).data.psychologistId == request.auth.uid;
    }
    
    // ========================================
    // REGLAS PARA ESTADÍSTICAS
    // ========================================
    match /statistics/{statId} {
      // El usuario puede leer/escribir sus propias estadísticas
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      
      // Los psicólogos pueden leer estadísticas de sus pacientes
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/patients/$(resource.data.userId)) &&
        get(/databases/$(database)/documents/patients/$(resource.data.userId)).data.psychologistId == request.auth.uid;
    }
    
    // ========================================
    // REGLAS PARA CONFIGURACIONES DE USUARIO
    // ========================================
    match /userSettings/{settingsId} {
      // Solo el usuario puede leer/escribir sus configuraciones
      allow read, write: if request.auth != null && 
        request.auth.uid == settingsId;
    }
    
    // ========================================
    // REGLAS PARA NOTAS DE SESIÓN
    // ========================================
    match /sessionNotes/{noteId} {
      // Solo el psicólogo puede leer/escribir notas de sesión
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.psychologistId;
      
      // El paciente puede leer sus propias notas de sesión
      allow read: if request.auth != null && 
        request.auth.uid == resource.data.patientId;
    }
    
    // ========================================
    // REGLAS PARA PLANES DE TRATAMIENTO
    // ========================================
    match /treatmentPlans/{planId} {
      // Solo el psicólogo puede gestionar planes de tratamiento
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.psychologistId;
      
      // El paciente puede leer su plan de tratamiento
      allow read: if request.auth != null && 
        request.auth.uid == resource.data.patientId;
    }
    
    // ========================================
    // REGLAS PARA ALERTAS DE CRISIS
    // ========================================
    match /crisisAlerts/{alertId} {
      // Solo el psicólogo asignado puede leer/escribir alertas
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.psychologistId;
      
      // El paciente puede leer sus propias alertas
      allow read: if request.auth != null && 
        request.auth.uid == resource.data.patientId;
      
      // Validaciones para creación
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.psychologistId &&
        isValidCrisisAlert(request.resource.data);
    }
    
    // ========================================
    // REGLAS PARA RECOMENDACIONES
    // ========================================
    match /recommendations/{recommendationId} {
      // El usuario puede leer/escribir sus recomendaciones
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      
      // Los psicólogos pueden crear recomendaciones para sus pacientes
      allow create: if request.auth != null && 
        (request.auth.uid == request.resource.data.userId ||
         (exists(/databases/$(database)/documents/patients/$(request.resource.data.userId)) &&
          get(/databases/$(database)/documents/patients/$(request.resource.data.userId)).data.psychologistId == request.auth.uid));
    }
    
    // ========================================
    // REGLAS PARA OBJETIVOS DE BIENESTAR
    // ========================================
    match /wellnessGoals/{goalId} {
      // El usuario puede leer/escribir sus objetivos
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      
      // Los psicólogos pueden leer objetivos de sus pacientes
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/patients/$(resource.data.userId)) &&
        get(/databases/$(database)/documents/patients/$(resource.data.userId)).data.psychologistId == request.auth.uid;
    }
    
    // ========================================
    // REGLAS PARA RECORDATORIOS
    // ========================================
    match /reminders/{reminderId} {
      // Solo el usuario puede leer/escribir sus recordatorios
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
    }
    
    // ========================================
    // REGLAS PARA AUDIT LOGS
    // ========================================
    match /auditLogs/{logId} {
      // Solo el usuario puede leer sus propios logs de auditoría
      allow read: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      
      // Solo el sistema puede escribir logs de auditoría
      allow write: if false; // Los logs se escriben desde el backend
    }
    
    // ========================================
    // REGLAS PARA INFORMES MÉDICOS (ACTUALIZADA)
    // ========================================
    match /medicalReports/{reportId} {
      // Solo el psicólogo puede leer/escribir informes médicos
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.psychologistId;
      
      // El paciente puede leer sus propios informes médicos
      allow read: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      
      // Los psicólogos pueden crear informes médicos
      allow create: if request.auth != null && 
        exists(/databases/$(database)/documents/psychologists/$(request.auth.uid)) &&
        isValidMedicalReport(request.resource.data);
    }
    
    // ========================================
    // REGLAS PARA HISTORIAL DEL PACIENTE
    // ========================================
    match /patientHistory/{historyId} {
      // Solo el psicólogo puede leer/escribir historial del paciente
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.psychologistId;
      
      // El paciente puede leer su propio historial
      allow read: if request.auth != null && 
        request.auth.uid == resource.data.patientId;
      
      // Validaciones para creación
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.psychologistId &&
        isValidPatientHistory(request.resource.data);
    }
    
    // ========================================
    // REGLAS PARA REPORTES
    // ========================================
    match /reports/{reportId} {
      // El usuario puede leer/escribir sus propios reportes
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      
      // Los psicólogos pueden leer reportes de sus pacientes
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/patients/$(resource.data.userId)) &&
        get(/databases/$(database)/documents/patients/$(resource.data.userId)).data.psychologistId == request.auth.uid;
    }
    
    // ========================================
    // REGLAS PARA ENTRADAS DEL DIARIO
    // ========================================
    match /journalEntries/{entryId} {
      // El usuario puede leer/escribir sus propias entradas del diario
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      
      // Los psicólogos pueden leer entradas del diario de sus pacientes
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/patients/$(resource.data.userId)) &&
        get(/databases/$(database)/documents/patients/$(resource.data.userId)).data.psychologistId == request.auth.uid;
      
      // Validaciones para creación
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId &&
        isValidJournalEntry(request.resource.data);
    }

    // ========================================
    // REGLAS PARA PLANTILLAS DEL DIARIO
    // ========================================
    match /journalTemplates/{templateId} {
      // Cualquier usuario autenticado puede leer plantillas
      allow read: if request.auth != null;
      // Permitir creación para usuarios autenticados (temporalmente)
      allow create: if request.auth != null;
      // Solo los administradores pueden actualizar/eliminar
      allow update, delete: if request.auth != null && request.auth.token.admin == true;
    }

    // ========================================
    // REGLAS PARA PROMPTS DEL DIARIO
    // ========================================
    match /journalPrompts/{promptId} {
      // Cualquier usuario autenticado puede leer prompts
      allow read: if request.auth != null;
      // Permitir creación para usuarios autenticados (temporalmente)
      allow create: if request.auth != null;
      // Solo los administradores pueden actualizar/eliminar
      allow update, delete: if request.auth != null && request.auth.token.admin == true;
    }
    
    // ========================================
    // REGLAS PARA REPORTES AVANZADOS
    // ========================================
    match /advancedReports/{reportId} {
      // El usuario puede leer/escribir sus propios reportes
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      
      // Permitir crear nuevos reportes
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId &&
        isValidReport(request.resource.data);
    }
    
    // ========================================
    // REGLAS PARA INDICADORES DE TECLEO
    // ========================================
    match /typing/{typingId} {
      // Cualquier usuario autenticado puede leer/escribir indicadores de tecleo
      allow read, write: if request.auth != null;
      
      // Permitir crear indicadores de tecleo
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId &&
        isValidTypingIndicator(request.resource.data);
    }
    
    // ========================================
    // REGLAS PARA CALIFICACIONES DE PSICÓLOGOS
    // ========================================
    match /psychologistRatings/{ratingId} {
      // Cualquier usuario autenticado puede leer calificaciones
      allow read: if request.auth != null;
      
      // Solo el usuario puede crear su propia calificación
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId &&
        isValidRating(request.resource.data);
      
      // Solo el usuario puede actualizar su propia calificación
      allow update: if request.auth != null && 
        request.auth.uid == resource.data.userId;
    }
    
    // ========================================
    // FUNCIONES DE VALIDACIÓN
    // ========================================
    
    // Validar mood log
    function isValidMoodLog(data) {
      return data.keys().hasAll(['userId', 'mood']) &&
             data.mood is number && data.mood >= 1 && data.mood <= 10 &&
             data.userId is string && data.userId.size() > 0;
    }
    
    // Validar entrada del diario
    function isValidJournalEntry(data) {
      return data.keys().hasAll(['userId', 'title', 'content', 'date']) &&
             data.userId is string && data.userId.size() > 0 &&
             data.title is string && data.title.size() > 0 &&
             data.content is string && data.content.size() > 0 &&
             data.date is timestamp;
    }
    
    // Validar paciente
    function isValidPatient(data) {
      return data.keys().hasAll(['userId', 'psychologistId', 'status']) &&
             data.userId is string && data.userId.size() > 0 &&
             data.psychologistId is string && data.psychologistId.size() > 0 &&
             data.status in ['active', 'inactive', 'discharged'];
    }
    
    // Validar cita
    function isValidAppointment(data) {
      return data.keys().hasAll(['userId', 'psychologistId', 'appointmentDate']) &&
             data.userId is string && data.userId.size() > 0 &&
             data.psychologistId is string && data.psychologistId.size() > 0 &&
             data.appointmentDate is timestamp;
    }
    
    // Validar mensaje
    function isValidMessage(data) {
      return data.keys().hasAll(['senderId', 'content', 'timestamp']) &&
             data.senderId is string && data.senderId.size() > 0 &&
             data.content is string && data.content.size() > 0 &&
             data.timestamp is timestamp;
    }
    
    // Validar informe médico
    function isValidMedicalReport(data) {
      return data.keys().hasAll(['userId', 'psychologistId', 'sessionDate', 'sessionType']) &&
             data.userId is string && data.userId.size() > 0 &&
             data.psychologistId is string && data.psychologistId.size() > 0 &&
             data.sessionType in ['individual', 'group', 'emergency', 'follow-up'] &&
             data.sessionDate is string && data.sessionDate.size() > 0;
    }
    
    // Validar historial del paciente
    function isValidPatientHistory(data) {
      return data.keys().hasAll(['patientId', 'psychologistId']) &&
             data.patientId is string && data.patientId.size() > 0 &&
             data.psychologistId is string && data.psychologistId.size() > 0;
    }
    
    // Validar alerta de crisis
    function isValidCrisisAlert(data) {
      return data.keys().hasAll(['patientId', 'psychologistId', 'urgency', 'signals']) &&
             data.patientId is string && data.patientId.size() > 0 &&
             data.psychologistId is string && data.psychologistId.size() > 0 &&
             data.urgency in ['low', 'medium', 'high', 'critical'] &&
             data.signals is list && data.signals.size() > 0;
    }
    
    // Validar reporte avanzado
    function isValidReport(data) {
      return data.keys().hasAll(['userId', 'reportType', 'title', 'content', 'riskLevel']) &&
             data.userId is string && data.userId.size() > 0 &&
             data.reportType in ['mood_analysis', 'chat_analysis', 'crisis_assessment', 'weekly_summary', 'monthly_summary'] &&
             data.title is string && data.title.size() > 0 &&
             data.content is string && data.content.size() > 0 &&
             data.riskLevel in ['low', 'medium', 'high'];
    }
    
    // Validar indicador de tecleo
    function isValidTypingIndicator(data) {
      return data.keys().hasAll(['chatId', 'userId', 'timestamp']) &&
             data.chatId is string && data.chatId.size() > 0 &&
             data.userId is string && data.userId.size() > 0 &&
             data.timestamp is timestamp;
    }
    
    // Validar calificación
    function isValidRating(data) {
      return data.keys().hasAll(['psychologistId', 'userId', 'rating']) &&
             data.psychologistId is string && data.psychologistId.size() > 0 &&
             data.userId is string && data.userId.size() > 0 &&
             data.rating is number && data.rating >= 1 && data.rating <= 5;
    }
  }
}