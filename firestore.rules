rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // ========================================
    // REGLAS PARA USUARIOS
    // ========================================
    match /users/{userId} {
      // Solo el usuario puede leer/escribir su propio perfil
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Los psicólogos pueden leer datos básicos de sus pacientes
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/patients/$(userId)) &&
        get(/databases/$(database)/documents/patients/$(userId)).data.psychologistId == request.auth.uid;
    }
    
    // ========================================
    // REGLAS PARA PERFILES DE PSICÓLOGOS
    // ========================================
    match /psychologists/{psychologistId} {
      // Solo el psicólogo puede leer/escribir su propio perfil
      allow read, write: if request.auth != null && request.auth.uid == psychologistId;
      
      // Los pacientes pueden leer datos básicos de su psicólogo asignado
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/patients/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/patients/$(request.auth.uid)).data.psychologistId == psychologistId;
    }
    
    // ========================================
    // REGLAS PARA MOOD LOGS
    // ========================================
    match /moodLogs/{moodLogId} {
      // El usuario puede leer/escribir sus propios mood logs
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      
      // Los psicólogos pueden leer mood logs de sus pacientes
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/patients/$(resource.data.userId)) &&
        get(/databases/$(database)/documents/patients/$(resource.data.userId)).data.psychologistId == request.auth.uid;
      
      // Validaciones para escritura - usar request.resource para documentos nuevos
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId &&
        isValidMoodLog(request.resource.data);
    }
    
    // ========================================
    // REGLAS PARA PACIENTES
    // ========================================
    match /patients/{patientId} {
      // Solo el psicólogo asignado puede gestionar el paciente
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.psychologistId;
      
      // El paciente puede leer su propia información básica
      allow read: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      
      // Validaciones para creación
      allow create: if request.auth != null && 
        request.auth.uid == resource.data.psychologistId &&
        isValidPatient(resource.data);
    }
    
    // ========================================
    // REGLAS PARA CITAS
    // ========================================
    match /appointments/{appointmentId} {
      // El psicólogo y el paciente pueden leer/escribir sus citas
      allow read, write: if request.auth != null && 
        (request.auth.uid == resource.data.patientId || 
         request.auth.uid == resource.data.psychologistId);
      
      // Validaciones para creación
      allow create: if request.auth != null && 
        (request.auth.uid == resource.data.patientId || 
         request.auth.uid == resource.data.psychologistId) &&
        isValidAppointment(resource.data);
    }
    
    // ========================================
    // REGLAS PARA MENSAJES DE CHAT
    // ========================================
    match /messages/{messageId} {
      // Solo los participantes pueden leer/escribir mensajes
      allow read, write: if request.auth != null && 
        request.auth.uid in resource.data.participants;
      
      // Validaciones para creación
      allow create: if request.auth != null && 
        request.auth.uid in resource.data.participants &&
        isValidMessage(resource.data);
    }
    
    // ========================================
    // REGLAS PARA NOTIFICACIONES
    // ========================================
    match /notifications/{notificationId} {
      // Solo el usuario destinatario puede leer/escribir sus notificaciones
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      
      // Los psicólogos pueden crear notificaciones para sus pacientes
      allow create: if request.auth != null && 
        (request.auth.uid == resource.data.userId ||
         (exists(/databases/$(database)/documents/patients/$(resource.data.userId)) &&
          get(/databases/$(database)/documents/patients/$(resource.data.userId)).data.psychologistId == request.auth.uid));
    }
    
    // ========================================
    // REGLAS PARA ANÁLISIS DE IA
    // ========================================
    match /aiAnalysis/{analysisId} {
      // El usuario puede leer/escribir sus propios análisis
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      
      // Los psicólogos pueden leer análisis de sus pacientes
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/patients/$(resource.data.userId)) &&
        get(/databases/$(database)/documents/patients/$(resource.data.userId)).data.psychologistId == request.auth.uid;
    }
    
    // ========================================
    // REGLAS PARA ESTADÍSTICAS
    // ========================================
    match /statistics/{statId} {
      // El usuario puede leer/escribir sus propias estadísticas
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      
      // Los psicólogos pueden leer estadísticas de sus pacientes
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/patients/$(resource.data.userId)) &&
        get(/databases/$(database)/documents/patients/$(resource.data.userId)).data.psychologistId == request.auth.uid;
    }
    
    // ========================================
    // REGLAS PARA CONFIGURACIONES DE USUARIO
    // ========================================
    match /userSettings/{settingsId} {
      // Solo el usuario puede leer/escribir sus configuraciones
      allow read, write: if request.auth != null && 
        request.auth.uid == settingsId;
    }
    
    // ========================================
    // REGLAS PARA NOTAS DE SESIÓN
    // ========================================
    match /sessionNotes/{noteId} {
      // Solo el psicólogo puede leer/escribir notas de sesión
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.psychologistId;
      
      // El paciente puede leer sus propias notas de sesión
      allow read: if request.auth != null && 
        request.auth.uid == resource.data.patientId;
    }
    
    // ========================================
    // REGLAS PARA PLANES DE TRATAMIENTO
    // ========================================
    match /treatmentPlans/{planId} {
      // Solo el psicólogo puede gestionar planes de tratamiento
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.psychologistId;
      
      // El paciente puede leer su plan de tratamiento
      allow read: if request.auth != null && 
        request.auth.uid == resource.data.patientId;
    }
    
    // ========================================
    // REGLAS PARA ALERTAS DE CRISIS
    // ========================================
    match /crisisAlerts/{alertId} {
      // Solo el psicólogo asignado puede leer/escribir alertas
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.psychologistId;
      
      // El paciente puede leer sus propias alertas
      allow read: if request.auth != null && 
        request.auth.uid == resource.data.patientId;
    }
    
    // ========================================
    // REGLAS PARA RECOMENDACIONES
    // ========================================
    match /recommendations/{recommendationId} {
      // El usuario puede leer/escribir sus recomendaciones
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      
      // Los psicólogos pueden crear recomendaciones para sus pacientes
      allow create: if request.auth != null && 
        (request.auth.uid == resource.data.userId ||
         (exists(/databases/$(database)/documents/patients/$(resource.data.userId)) &&
          get(/databases/$(database)/documents/patients/$(resource.data.userId)).data.psychologistId == request.auth.uid));
    }
    
    // ========================================
    // REGLAS PARA OBJETIVOS DE BIENESTAR
    // ========================================
    match /wellnessGoals/{goalId} {
      // El usuario puede leer/escribir sus objetivos
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      
      // Los psicólogos pueden leer objetivos de sus pacientes
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/patients/$(resource.data.userId)) &&
        get(/databases/$(database)/documents/patients/$(resource.data.userId)).data.psychologistId == request.auth.uid;
    }
    
    // ========================================
    // REGLAS PARA RECORDATORIOS
    // ========================================
    match /reminders/{reminderId} {
      // Solo el usuario puede leer/escribir sus recordatorios
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
    }
    
    // ========================================
    // REGLAS PARA AUDIT LOGS
    // ========================================
    match /auditLogs/{logId} {
      // Solo el usuario puede leer sus propios logs de auditoría
      allow read: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      
      // Solo el sistema puede escribir logs de auditoría
      allow write: if false; // Los logs se escriben desde el backend
    }
    
    // ========================================
    // REGLAS PARA REPORTES
    // ========================================
    match /reports/{reportId} {
      // El usuario puede leer/escribir sus propios reportes
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      
      // Los psicólogos pueden leer reportes de sus pacientes
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/patients/$(resource.data.userId)) &&
        get(/databases/$(database)/documents/patients/$(resource.data.userId)).data.psychologistId == request.auth.uid;
    }
    
    // ========================================
    // FUNCIONES DE VALIDACIÓN
    // ========================================
    
    // Validar mood log
    function isValidMoodLog(data) {
      return data.keys().hasAll(['userId', 'mood']) &&
             data.mood is number && data.mood >= 1 && data.mood <= 10 &&
             data.userId is string && data.userId.size() > 0;
    }
    
    // Validar paciente
    function isValidPatient(data) {
      return data.keys().hasAll(['userId', 'psychologistId', 'status']) &&
             data.userId is string && data.userId.size() > 0 &&
             data.psychologistId is string && data.psychologistId.size() > 0 &&
             data.status in ['active', 'inactive', 'discharged'];
    }
    
    // Validar cita
    function isValidAppointment(data) {
      return data.keys().hasAll(['patientId', 'psychologistId', 'startTime', 'endTime']) &&
             data.patientId is string && data.patientId.size() > 0 &&
             data.psychologistId is string && data.psychologistId.size() > 0 &&
             data.startTime is timestamp && data.endTime is timestamp &&
             data.startTime < data.endTime;
    }
    
    // Validar mensaje
    function isValidMessage(data) {
      return data.keys().hasAll(['participants', 'content', 'timestamp']) &&
             data.participants is list && data.participants.size() >= 2 &&
             data.content is string && data.content.size() > 0 &&
             data.timestamp is timestamp;
    }
  }
}