rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Función helper para verificar autenticación
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Función helper para verificar que el usuario es el propietario
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Función helper para verificar si es psicólogo
    function isPsychologist() {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/psychologists/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/psychologists/$(request.auth.uid)).data.role == 'psychologist';
    }
    
    // Colección de usuarios
    match /users/{userId} {
      allow read, write: if isOwner(userId);
    }
    
    // Colección de psicólogos
    match /psychologists/{psychologistId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(psychologistId);
    }
    
    // Colección de mood logs
    match /moodLogs/{logId} {
      allow read, write: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || 
         isPsychologist());
    }
    
    // Colección de análisis de IA
    match /aiAnalysis/{analysisId} {
      allow read, write: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || 
         isPsychologist());
    }
    
    // Colección de notificaciones
    match /notifications/{notificationId} {
      allow read, write: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
    }
    
    // Colección de configuración de usuario
    match /userSettings/{userId} {
      allow read, write: if isOwner(userId);
    }
    
    // Colección de estadísticas de usuario
    match /userStats/{userId} {
      allow read, write: if isOwner(userId);
    }
    
    // Colección de logros
    match /achievements/{achievementId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
    }
    
    // Colección de sesiones de psicólogo
    match /psychologistSessions/{sessionId} {
      allow read, write: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || 
         resource.data.psychologistId == request.auth.uid);
    }
    
    // Colección de mensajes
    match /messages/{messageId} {
      allow read, write: if isAuthenticated() && 
        (resource.data.senderId == request.auth.uid || 
         resource.data.receiverId == request.auth.uid);
    }
    
    // Colección de conversaciones
    match /conversations/{conversationId} {
      allow read, write: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || 
         resource.data.psychologistId == request.auth.uid);
    }
    
    // Colección de chats
    match /chats/{chatId} {
      allow read, write: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || 
         resource.data.psychologistId == request.auth.uid);
      
      // Subcolección de mensajes
      match /messages/{messageId} {
        allow read, write: if isAuthenticated() && 
          (get(/databases/$(database)/documents/chats/$(chatId)).data.userId == request.auth.uid || 
           get(/databases/$(database)/documents/chats/$(chatId)).data.psychologistId == request.auth.uid);
      }
    }
    
    // Colección de configuración de la app
    match /appConfig/{configId} {
      allow read: if isAuthenticated();
    }
    
    // Colección de logs de auditoría
    match /auditLogs/{logId} {
      allow read, write: if isAuthenticated();
    }
    
    // Colección de respaldos
    match /backups/{backupId} {
      allow read, write: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
    }
    
    // Colección de userAchievements
    match /userAchievements/{achievementId} {
      allow read, write: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
    }
  }
}