import Groq from 'groq-sdk';

// Configuraci√≥n de Groq (GRATIS)
const groq = new Groq({
  apiKey: import.meta.env.VITE_GROQ_API_KEY || 'gsk_your_api_key_here',
  dangerouslyAllowBrowser: true // Solo para desarrollo
});

// Interfaces para los agentes
export interface MoodAnalysisData {
  moodLogs: Array<{
    mood: number;
    date: Date;
    notes?: string;
  }>;
  period: {
    start: Date;
    end: Date;
  };
}

export interface ChatAnalysisData {
  messages: Array<{
    content: string;
    timestamp: Date;
    sender: 'user' | 'psychologist';
  }>;
  period: {
    start: Date;
    end: Date;
  };
}

export interface CrisisAssessmentData {
  recentMoodLogs: Array<{
    mood: number;
    date: Date;
    notes?: string;
  }>;
  recentMessages: Array<{
    content: string;
    timestamp: Date;
  }>;
  userProfile: {
    age?: number;
    hasHistoryOfCrisis?: boolean;
  };
}

// ü§ñ AGENTE 1: AN√ÅLISIS DE ESTADO DE √ÅNIMO
export class MoodAnalysisAgent {
  private systemPrompt = `Eres un psic√≥logo cl√≠nico especializado en an√°lisis de patrones emocionales y bienestar mental. 
Analiza los datos de estado de √°nimo del usuario con enfoque profesional y emp√°tico.

INSTRUCCIONES ESPEC√çFICAS:
- S√© emp√°tico y comprensivo en tu an√°lisis
- Identifica patrones emocionales significativos
- Proporciona insights basados en evidencia psicol√≥gica
- Sugiere intervenciones apropiadas y realistas
- Eval√∫a el nivel de riesgo de manera conservadora
- Usa lenguaje profesional pero accesible

RESPONDE EN FORMATO JSON:
{
  "summary": "Resumen emp√°tico del estado emocional del usuario",
  "patterns": ["patr√≥n emocional espec√≠fico identificado", "tendencia de comportamiento", "patr√≥n temporal"],
  "insights": ["insight psicol√≥gico basado en evidencia", "observaci√≥n cl√≠nica relevante", "hallazgo significativo"],
  "recommendations": ["intervenci√≥n espec√≠fica y pr√°ctica", "t√©cnica de manejo emocional", "estrategia de bienestar"],
  "riskLevel": "low|medium|high",
  "nextSteps": ["acci√≥n inmediata recomendada", "seguimiento sugerido"]
}`;

  async analyzeMood(data: MoodAnalysisData): Promise<any> {
    try {
      const prompt = `
        Analiza estos datos de estado de √°nimo:
        
        Per√≠odo: ${data.period.start.toLocaleDateString()} - ${data.period.end.toLocaleDateString()}
        
        Registros de √°nimo:
        ${data.moodLogs.map(log => 
          `- Fecha: ${log.date.toLocaleDateString()}, Estado: ${log.mood}/10${log.notes ? `, Notas: ${log.notes}` : ''}`
        ).join('\n')}
        
        Proporciona un an√°lisis profesional y recomendaciones.
      `;

      const response = await groq.chat.completions.create({
        messages: [
          { role: 'system', content: this.systemPrompt },
          { role: 'user', content: prompt }
        ],
        model: 'llama-3.1-8b-instant',
        temperature: 0.7,
        max_tokens: 1000
      });

      const content = response.choices[0]?.message?.content;
      return JSON.parse(content || '{}');
    } catch (error) {
      console.error('Error en an√°lisis de estado de √°nimo:', error);
      return {
        summary: 'Error al analizar los datos',
        patterns: [],
        insights: [],
        recommendations: ['Contacta a tu psic√≥logo para un an√°lisis m√°s detallado'],
        riskLevel: 'low',
        nextSteps: []
      };
    }
  }
}

// ü§ñ AGENTE 2: AN√ÅLISIS DE CONVERSACIONES
export class ChatAnalysisAgent {
  private systemPrompt = `Eres un psic√≥logo cl√≠nico especializado en an√°lisis de comunicaci√≥n terap√©utica y procesos de cambio.
Analiza las conversaciones entre usuario y psic√≥logo con enfoque profesional y cl√≠nico.

INSTRUCCIONES ESPEC√çFICAS:
- Eval√∫a la calidad de la comunicaci√≥n terap√©utica
- Identifica temas recurrentes y patrones de comunicaci√≥n
- Analiza el progreso terap√©utico y la alianza terap√©utica
- Detecta se√±ales de resistencia o colaboraci√≥n
- Proporciona insights sobre el proceso terap√©utico
- Sugiere mejoras en la comunicaci√≥n

RESPONDE EN FORMATO JSON:
{
  "summary": "Evaluaci√≥n general de la comunicaci√≥n terap√©utica",
  "themes": ["tema terap√©utico principal", "preocupaci√≥n recurrente", "√°rea de trabajo"],
  "progress": "Evaluaci√≥n del progreso terap√©utico y cambios observados",
  "insights": ["insight sobre el proceso terap√©utico", "observaci√≥n sobre la alianza", "hallazgo cl√≠nico"],
  "recommendations": ["sugerencia para mejorar la comunicaci√≥n", "estrategia terap√©utica recomendada"],
  "engagement": "low|medium|high"
}`;

  async analyzeChat(data: ChatAnalysisData): Promise<any> {
    try {
      const prompt = `
        Analiza estas conversaciones terap√©uticas:
        
        Per√≠odo: ${data.period.start.toLocaleDateString()} - ${data.period.end.toLocaleDateString()}
        
        Mensajes:
        ${data.messages.map(msg => 
          `- ${msg.sender}: ${msg.content} (${msg.timestamp.toLocaleDateString()})`
        ).join('\n')}
        
        Proporciona un an√°lisis profesional de la comunicaci√≥n terap√©utica.
      `;

      const response = await groq.chat.completions.create({
        messages: [
          { role: 'system', content: this.systemPrompt },
          { role: 'user', content: prompt }
        ],
        model: 'llama-3.1-8b-instant',
        temperature: 0.7,
        max_tokens: 1000
      });

      const content = response.choices[0]?.message?.content;
      return JSON.parse(content || '{}');
    } catch (error) {
      console.error('Error en an√°lisis de conversaciones:', error);
      return {
        summary: 'Error al analizar las conversaciones',
        themes: [],
        progress: 'No se pudo evaluar el progreso',
        insights: [],
        recommendations: ['Contacta a tu psic√≥logo para un an√°lisis m√°s detallado'],
        engagement: 'medium'
      };
    }
  }
}

// ü§ñ AGENTE 3: DETECCI√ìN DE CRISIS
export class CrisisDetectionAgent {
  private systemPrompt = `Eres un psic√≥logo cl√≠nico especializado en evaluaci√≥n de riesgo y crisis en salud mental.
Analiza los datos del usuario para identificar se√±ales de alerta y determinar el nivel de riesgo con m√°xima precisi√≥n.

INSTRUCCIONES ESPEC√çFICAS:
- Eval√∫a el riesgo de manera conservadora y profesional
- Identifica se√±ales de alerta espec√≠ficas y objetivas
- Considera factores protectores y de riesgo
- Proporciona acciones inmediatas basadas en evidencia
- Usa criterios cl√≠nicos establecidos para evaluaci√≥n de riesgo
- Prioriza la seguridad del usuario

CRITERIOS DE EVALUACI√ìN:
- LOW: Estado emocional estable, sin se√±ales de riesgo
- MEDIUM: Algunas se√±ales de preocupaci√≥n, requiere seguimiento
- HIGH: M√∫ltiples se√±ales de riesgo, requiere intervenci√≥n profesional
- CRITICAL: Se√±ales graves de crisis, requiere atenci√≥n inmediata

RESPONDE EN FORMATO JSON:
{
  "riskLevel": "low|medium|high|critical",
  "indicators": ["se√±al espec√≠fica identificada", "comportamiento preocupante", "patr√≥n de riesgo"],
  "immediateActions": ["acci√≥n inmediata espec√≠fica", "intervenci√≥n recomendada"],
  "recommendations": ["recomendaci√≥n profesional", "estrategia de manejo"],
  "urgent": true|false,
  "contactProfessional": true|false
}`;

  async assessCrisis(data: CrisisAssessmentData): Promise<any> {
    try {
      const prompt = `
        Eval√∫a el riesgo de crisis para este usuario:
        
        Registros de √°nimo recientes:
        ${data.recentMoodLogs.map(log => 
          `- Estado: ${log.mood}/10, Fecha: ${log.date.toLocaleDateString()}${log.notes ? `, Notas: ${log.notes}` : ''}`
        ).join('\n')}
        
        Mensajes recientes:
        ${data.recentMessages.map(msg => 
          `- ${msg.content} (${msg.timestamp.toLocaleDateString()})`
        ).join('\n')}
        
        Perfil del usuario:
        - Edad: ${data.userProfile.age || 'No especificada'}
        - Historial de crisis: ${data.userProfile.hasHistoryOfCrisis ? 'S√≠' : 'No'}
        
        Determina el nivel de riesgo y las acciones recomendadas.
      `;

      const response = await groq.chat.completions.create({
        messages: [
          { role: 'system', content: this.systemPrompt },
          { role: 'user', content: prompt }
        ],
        model: 'llama-3.1-8b-instant',
        temperature: 0.3, // Menor temperatura para evaluaciones m√°s consistentes
        max_tokens: 800
      });

      const content = response.choices[0]?.message?.content;
      return JSON.parse(content || '{}');
    } catch (error) {
      console.error('Error en evaluaci√≥n de crisis:', error);
      return {
        riskLevel: 'medium',
        indicators: ['Error en el an√°lisis'],
        immediateActions: ['Contacta a un profesional de salud mental'],
        recommendations: ['Busca ayuda profesional inmediatamente'],
        urgent: true,
        contactProfessional: true
      };
    }
  }
}

// ü§ñ AGENTE 4: RECOMENDACIONES PERSONALIZADAS
export class RecommendationAgent {
  private systemPrompt = `Eres un psic√≥logo especializado en recomendaciones personalizadas de bienestar.
Bas√°ndote en el an√°lisis de datos del usuario, proporciona recomendaciones espec√≠ficas y accionables.

RESPONDE EN FORMATO JSON:
{
  "dailyRecommendations": ["recomendaci√≥n 1", "recomendaci√≥n 2"],
  "weeklyGoals": ["objetivo 1", "objetivo 2"],
  "techniques": ["t√©cnica 1", "t√©cnica 2"],
  "resources": ["recurso 1", "recurso 2"],
  "priority": "high|medium|low"
}`;

  async generateRecommendations(analysisData: any): Promise<any> {
    try {
      const prompt = `
        Genera recomendaciones personalizadas basadas en este an√°lisis:
        
        ${JSON.stringify(analysisData, null, 2)}
        
        Proporciona recomendaciones espec√≠ficas, t√©cnicas y recursos √∫tiles.
      `;

      const response = await groq.chat.completions.create({
        messages: [
          { role: 'system', content: this.systemPrompt },
          { role: 'user', content: prompt }
        ],
        model: 'llama-3.1-8b-instant',
        temperature: 0.8,
        max_tokens: 800
      });

      const content = response.choices[0]?.message?.content;
      return JSON.parse(content || '{}');
    } catch (error) {
      console.error('Error generando recomendaciones:', error);
      return {
        dailyRecommendations: ['Mant√©n una rutina regular de sue√±o'],
        weeklyGoals: ['Practica t√©cnicas de relajaci√≥n'],
        techniques: ['Respiraci√≥n profunda', 'Meditaci√≥n'],
        resources: ['Contacta a tu psic√≥logo'],
        priority: 'medium'
      };
    }
  }
}

// Instancias de los agentes
export const moodAnalysisAgent = new MoodAnalysisAgent();
export const chatAnalysisAgent = new ChatAnalysisAgent();
export const crisisDetectionAgent = new CrisisDetectionAgent();
export const recommendationAgent = new RecommendationAgent();
