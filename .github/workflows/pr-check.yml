name: üîç Pull Request Check

on:
  pull_request:
    branches: [main, master]
    types: [opened, synchronize, reopened]

env:
  NODE_VERSION: '18'

jobs:
  # ========================================
  # JOB 1: CODE QUALITY CHECKS
  # ========================================
  quality:
    name: üîç Code Quality
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üì¶ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: üì¶ Install dependencies
        run: npm ci

      - name: üîç Run ESLint
        run: npm run lint

      - name: üß™ Run tests
        run: npm run test:run

      - name: üìä Generate test coverage
        run: npm run test:coverage

      - name: üîí Security audit
        run: npm audit --audit-level=moderate

  # ========================================
  # JOB 2: BUILD CHECK
  # ========================================
  build:
    name: üî® Build Check
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üì¶ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: üì¶ Install dependencies
        run: npm ci

      - name: üî® Build application
        run: npm run build
        env:
          VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}
          VITE_FIREBASE_MEASUREMENT_ID: ${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}

      - name: üìè Check bundle size
        run: |
          # Check if dist directory exists and has reasonable size
          if [ -d "dist" ]; then
            echo "‚úÖ Build successful"
            du -sh dist/
          else
            echo "‚ùå Build failed - dist directory not found"
            exit 1
          fi

  # ========================================
  # JOB 3: PREVIEW DEPLOYMENT
  # ========================================
  preview:
    name: üëÄ Preview Deployment
    runs-on: ubuntu-latest
    needs: [quality, build]
    if: github.event.pull_request.draft == false

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üì¶ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: üì¶ Install Vercel CLI
        run: npm install --global vercel@latest

      - name: üîß Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: üöÄ Deploy Preview
        run: vercel deploy --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}
          VITE_FIREBASE_MEASUREMENT_ID: ${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}

      - name: üí¨ Comment PR with preview link
        uses: actions/github-script@v6
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('Preview deployment')
            );

            const previewUrl = process.env.VERCEL_URL ? `https://${process.env.VERCEL_URL}` : 'Preview URL not available';

            const body = `## üëÄ Preview Deployment

            **Preview URL:** ${previewUrl}

            This preview will be automatically updated when you push new commits to this PR.

            ### üß™ Testing Checklist
            - [ ] Login/Register functionality works
            - [ ] Dashboard loads correctly
            - [ ] Mood logging works
            - [ ] Statistics display properly
            - [ ] Chat functionality works
            - [ ] Settings page is accessible
            - [ ] PWA features work (if applicable)

            ### üì± Test on Different Devices
            - [ ] Desktop browser
            - [ ] Mobile browser
            - [ ] Tablet browser

            ---
            *This comment will be updated automatically.*`;

            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            }

  # ========================================
  # JOB 4: ACCESSIBILITY CHECK
  # ========================================
  accessibility:
    name: ‚ôø Accessibility Check
    runs-on: ubuntu-latest
    needs: preview
    if: github.event.pull_request.draft == false

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üì¶ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: üì¶ Install dependencies
        run: npm ci

      - name: üî® Build application
        run: npm run build
        env:
          VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}
          VITE_FIREBASE_MEASUREMENT_ID: ${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}

      - name: ‚ôø Run accessibility tests
        run: |
          # Install pa11y for accessibility testing
          npm install -g pa11y

          # Start local server
          npm run preview &
          SERVER_PID=$!

          # Wait for server to start
          sleep 10

          # Run accessibility tests on key pages
          echo "Testing accessibility on main pages..."

          # Test main page
          pa11y http://localhost:4173/ --reporter cli || echo "Accessibility issues found on main page"

          # Test login page
          pa11y http://localhost:4173/login --reporter cli || echo "Accessibility issues found on login page"

          # Test register page
          pa11y http://localhost:4173/register --reporter cli || echo "Accessibility issues found on register page"

          # Clean up
          kill $SERVER_PID

  # ========================================
  # JOB 5: PERFORMANCE CHECK
  # ========================================
  performance:
    name: ‚ö° Performance Check
    runs-on: ubuntu-latest
    needs: preview
    if: github.event.pull_request.draft == false

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üì¶ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: üì¶ Install dependencies
        run: npm ci

      - name: üî® Build application
        run: npm run build
        env:
          VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}
          VITE_FIREBASE_MEASUREMENT_ID: ${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}

      - name: üìä Bundle size analysis
        run: |
          echo "üìä Bundle Size Analysis:"
          echo "========================"

          if [ -d "dist" ]; then
            echo "üìÅ Total build size:"
            du -sh dist/
            
            echo ""
            echo "üìÑ Individual file sizes:"
            find dist -type f -name "*.js" -o -name "*.css" -o -name "*.html" | while read file; do
              size=$(du -h "$file" | cut -f1)
              echo "  $file: $size"
            done
            
            echo ""
            echo "üì¶ JavaScript bundles:"
            find dist -name "*.js" -exec basename {} \; | sort
            
            echo ""
            echo "üé® CSS files:"
            find dist -name "*.css" -exec basename {} \; | sort
          else
            echo "‚ùå Build directory not found"
            exit 1
          fi

      - name: ‚ö° Lighthouse CI
        uses: treosh/lighthouse-ci-action@v9
        with:
          urls: |
            http://localhost:4173/
            http://localhost:4173/login
            http://localhost:4173/register
          configPath: './lighthouse.config.js'
          uploadArtifacts: true
          temporaryPublicStorage: true
